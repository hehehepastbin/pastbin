def extract_modifications(directory, csv_file):
    """ Extract modifications and save them to a CSV file, and export each modification to a text file. """
    try:
        # Open CSV file to write modifications
        with open(csv_file, 'w', newline='', encoding='utf-8') as file:
            writer = csv.writer(file)
            writer.writerow(['File Path', 'Start Line', 'End Line', 'Status', 'Author'])

            # Get the svn diff for the directory
            proc = subprocess.Popen(['svn', 'diff', directory], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            out, err = proc.communicate()

            if proc.returncode != 0:
                print("Error:", err.decode())
                return
            
            current_file = None
            modification = None
            modifications = []
            original_lines = []
            modified_lines = []

            # Parse svn diff output
            for line in out.decode().split('\n'):
                if line.startswith('Index:'):
                    if modification:
                        modifications.append(modification)
                        export_modification(modification[0], modification[1], modification[2], original_lines, modified_lines, directory)
                        original_lines = []
                        modified_lines = []
                    current_file = line.split(':')[1].strip()
                    modification = None
                elif line.startswith('@@'):
                    if modification:
                        modifications.append(modification)
                        export_modification(modification[0], modification[1], modification[2], original_lines, modified_lines, directory)
                        original_lines = []
                        modified_lines = []
                    # Parse @@ -1,3 +4,7 @@ format to find line numbers
                    parts = line.split(' ')
                    start_line = int(parts[2].split(',')[0][1:])
                    modification = (current_file, start_line, 'Pending', 'Failed', 'bulat.khasanov')
                elif line.startswith('-'):
                    original_lines.append(line[1:].strip())
                elif line.startswith('+'):
                    modified_lines.append(line[1:].strip())
                elif line.startswith(' '):
                    if original_lines or modified_lines:
                        end_line = start_line + len(original_lines) - 1
                        modification = (current_file, start_line, end_line, 'Failed', 'bulat.khasanov')

            # Handle last modification
            if modification:
                modifications.append(modification)
                export_modification(modification[0], modification[1], modification[2], original_lines, modified_lines, directory)

            # Write modifications to CSV
            for mod in modifications:
                writer.writerow(mod[:4])

            print(f"Modifications written to {csv_file}")
    except Exception as e:
        print(f"Error extracting modifications: {e}")

def export_modification(file_path, start_line, end_line, original_lines, modified_lines, directory):
    """ Export each modification to a txt file with original and modified contents. """
    try:
        base_name = os.path.basename(file_path)
        txt_file_name = f"{base_name}_{start_line}_{end_line}.txt"
        with open(os.path.join(directory, txt_file_name), 'w', encoding='utf-8') as txt_file:
            txt_file.write(f"{file_path}, {start_line}\n")
            txt_file.write("Original content here...\n")
            txt_file.writelines(line + "\n" for line in original_lines)
            txt_file.write("Modified content here...\n")
            txt_file.writelines(line + "\n" for line in modified_lines)
        print(f"Modification exported to {txt_file_name}")
    except Exception as e:
        print(f"Error exporting modification: {e}")
